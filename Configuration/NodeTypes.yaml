'Neos.Neos:Node': &DEFAULT
  search:
    elasticSearchMapping:
      _all:
        analyzer: 'dimension_specific_ngram'
        search_analyzer: 'dimension_specific'

'Neos.NodeTypes:Text':
  <<: *DEFAULT

'Neos.NodeTypes:Headline':
  <<: *DEFAULT

'Neos.NodeTypes:TextWithImage':
  <<: *DEFAULT

'Neos.Neos:Document':
  properties:
    'uriPathSegment':
      search:
        elasticSearchMapping:
          type: string
          index: not_analyzed
    title:
      search:
        fulltextExtractor: ${Indexing.extractInto('h1', value)}
        elasticSearchMapping: &STRING_INCLUDE_IN_ALL
          type: string
          index: not_analyzed
          include_in_all: true
    '__fulltext':
      search:
        indexing: ''
        elasticSearchMapping:
          type: object
          properties:
            'h1':
              <<: *STRING_INCLUDE_IN_ALL
              boost: 20
            'h2':
              <<: *STRING_INCLUDE_IN_ALL
              boost: 12
            'h3':
              <<: *STRING_INCLUDE_IN_ALL
              boost: 10
            'h4':
              <<: *STRING_INCLUDE_IN_ALL
              boost: 5
            'h5':
              <<: *STRING_INCLUDE_IN_ALL
              boost: 3
            'h6':
              <<: *STRING_INCLUDE_IN_ALL
              boost: 2
            'text':
              <<: *STRING_INCLUDE_IN_ALL
              boost: 1

'Ttree.Strapping:Content.Headline':
  properties:
    'title':
      search:
        fulltextExtractor: ${Indexing.extractInto('h1', value)}
        elasticSearchMapping:
          <<: *STRING_INCLUDE_IN_ALL

'Ttree.Strapping:Content.Text':
  properties:
    'text':
      search:
        fulltextExtractor: '${Indexing.extractHtmlTags(value)}'
        elasticSearchMapping:
          <<: *STRING_INCLUDE_IN_ALL

'Ttree.Strapping:Mixin.Image':
  properties:
    alternativeText:
      search:
        elasticSearchMapping:
          <<: *STRING_INCLUDE_IN_ALL
    imageTitle:
      search:
        elasticSearchMapping:
          <<: *STRING_INCLUDE_IN_ALL
